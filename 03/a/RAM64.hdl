// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[3..5],a=x0,b=x1,c=x2,d=x3,e=x4,f=x5,g=x6,h=x7);
    RAM8(in=in,load=x0,address=address[0..2],out=y0);
    RAM8(in=in,load=x1,address=address[0..2],out=y1);
    RAM8(in=in,load=x2,address=address[0..2],out=y2);
    RAM8(in=in,load=x3,address=address[0..2],out=y3);
    RAM8(in=in,load=x4,address=address[0..2],out=y4);
    RAM8(in=in,load=x5,address=address[0..2],out=y5);
    RAM8(in=in,load=x6,address=address[0..2],out=y6);
    RAM8(in=in,load=x7,address=address[0..2],out=y7);
    Mux8Way16(a=y0,b=y1,c=y2,d=y3,e=y4,f=y5,g=y6,h=y7,sel=address[3..5],out=out);
}